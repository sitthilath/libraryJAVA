
import com.toedter.calendar.JDateChooser;
import java.awt.Image;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.sql.Blob;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.Period;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JComboBox;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Bie
 */
public class BookForm extends javax.swing.JFrame {

    /**
     * Creates new form BookForm
     */
    Connection c = MyConnection.getConnection();
    PreparedStatement ps =null;
    ResultSet rs=null;
  DefaultTableModel model = new DefaultTableModel();
   String filename;
           byte[] photo;
  
 // byte[] image;
  
    JComboBox jc = new JComboBox();
    public BookForm() {
        initComponents();
        model = (DefaultTableModel) tbModel.getModel();
        showData();
        
     generatebookBox.setDate(new Date());
      importbookBox.setDate(new Date()); 
      
      setitemAuthor();
      setitemType();

    }
    
    public void setitemAuthor(){
       Connection c = MyConnection.getConnection();
        try {
            
       
       String sql = "select * from tb_author";
       ps = c.prepareStatement(sql);
       ResultSet rs = c.createStatement().executeQuery(sql);
       while(rs.next()){

           String name = rs.getString("au_name");
           authornameBox.addItem(name);
       }
       
       }   catch (Exception e) {
        }
    }
  
    
    
    
    public void setitemType(){
       Connection c = MyConnection.getConnection();
        try {
            
       
       String sql = "select * from tb_booktype";
       ps = c.prepareStatement(sql);
       ResultSet rs = c.createStatement().executeQuery(sql);
       while(rs.next()){

           String name = rs.getString("t_name");
           typebookBox.addItem(name);
       }
       
       }   catch (Exception e) {
        }
    }
  
    

   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton3 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        amountbookBox = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        finebookBox = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        idbookBox = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        namebookBox = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        generatebookBox = new com.toedter.calendar.JDateChooser();
        importbookBox = new com.toedter.calendar.JDateChooser();
        jLabel19 = new javax.swing.JLabel();
        pricebookBox = new javax.swing.JTextField();
        authornameBox = new javax.swing.JComboBox<>();
        typebookBox = new javax.swing.JComboBox<>();
        searchBox = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbModel = new javax.swing.JTable();
        btnDelete = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        jLabel20 = new javax.swing.JLabel();
        pagebookBox = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        labelPhoto = new javax.swing.JLabel();
        btnChoose = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1400, 740));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton3.setFont(new java.awt.Font("Phetsarath OT", 1, 14)); // NOI18N
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/house.png"))); // NOI18N
        jButton3.setText("ໜ້າຫຼັກ");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 110, 50));

        jPanel1.setBackground(new java.awt.Color(255, 102, 102));
        jPanel1.setMinimumSize(new java.awt.Dimension(1400, 740));
        jPanel1.setPreferredSize(new java.awt.Dimension(1400, 740));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        amountbookBox.setFont(new java.awt.Font("Phetsarath OT", 0, 11)); // NOI18N
        amountbookBox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                amountbookBoxKeyTyped(evt);
            }
        });
        jPanel1.add(amountbookBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 220, 188, 29));

        jLabel12.setFont(new java.awt.Font("Phetsarath OT", 1, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("ຄ່າປັບໄໝ/ມື້");
        jPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 340, 105, 29));

        jLabel13.setFont(new java.awt.Font("Phetsarath OT", 1, 18)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("ລະຫັດ ປະເພດ");
        jPanel1.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 300, 110, 29));

        jLabel14.setFont(new java.awt.Font("Phetsarath OT", 1, 18)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("ລະຫັດ ຜູ້ແຕ່ງ");
        jPanel1.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 260, 105, 29));

        jLabel15.setFont(new java.awt.Font("Phetsarath OT", 1, 18)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("ຈຳນວນ");
        jPanel1.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 220, 105, 29));

        finebookBox.setFont(new java.awt.Font("Phetsarath OT", 0, 11)); // NOI18N
        finebookBox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                finebookBoxKeyTyped(evt);
            }
        });
        jPanel1.add(finebookBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 340, 188, 29));

        jLabel16.setFont(new java.awt.Font("Phetsarath OT", 1, 18)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("ຊື່ປື້ມ");
        jPanel1.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 180, 105, 29));

        idbookBox.setFont(new java.awt.Font("Phetsarath OT", 0, 11)); // NOI18N
        jPanel1.add(idbookBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 140, 188, 29));

        jLabel2.setFont(new java.awt.Font("Phetsarath OT", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("ຮູບ");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 60, 105, 50));

        namebookBox.setFont(new java.awt.Font("Phetsarath OT", 0, 11)); // NOI18N
        namebookBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                namebookBoxActionPerformed(evt);
            }
        });
        jPanel1.add(namebookBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 180, 188, 29));

        jLabel17.setFont(new java.awt.Font("Phetsarath OT", 1, 18)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("ປີທີພິມ");
        jPanel1.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 380, 131, 29));

        jLabel18.setFont(new java.awt.Font("Phetsarath OT", 1, 18)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setText("ວັນທີ່ນຳເຂົ້າ");
        jPanel1.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 420, 131, 29));
        jPanel1.add(generatebookBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 380, 187, 29));
        jPanel1.add(importbookBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 420, 187, 32));

        jLabel19.setFont(new java.awt.Font("Phetsarath OT", 1, 18)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setText("ລາຄາ");
        jPanel1.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 460, 55, 29));

        pricebookBox.setFont(new java.awt.Font("Phetsarath OT", 0, 11)); // NOI18N
        pricebookBox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                pricebookBoxKeyTyped(evt);
            }
        });
        jPanel1.add(pricebookBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 460, 188, 29));

        authornameBox.setFont(new java.awt.Font("Phetsarath OT", 1, 11)); // NOI18N
        authornameBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                authornameBoxActionPerformed(evt);
            }
        });
        jPanel1.add(authornameBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 260, 190, 30));

        typebookBox.setFont(new java.awt.Font("Phetsarath OT", 0, 11)); // NOI18N
        jPanel1.add(typebookBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 300, 190, 30));

        searchBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBoxActionPerformed(evt);
            }
        });
        searchBox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchBoxKeyReleased(evt);
            }
        });
        jPanel1.add(searchBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 70, 160, 40));

        jButton2.setFont(new java.awt.Font("Phetsarath OT", 0, 11)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/searchButton.png"))); // NOI18N
        jButton2.setText("ຄົ້ນຫາ");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(769, 75, 90, 30));

        jLabel5.setFont(new java.awt.Font("Phetsarath OT", 1, 18)); // NOI18N
        jLabel5.setText("ຄົ້ນຫາຕາມຊື່ປື້ມ");
        jPanel3.add(jLabel5);

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 70, 130, 40));

        tbModel.setFont(new java.awt.Font("Phetsarath OT", 0, 11)); // NOI18N
        tbModel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "B_id", "B_name", "B_amount", "Auther_name", "B_type", "B_fine", "Date_generate", "Date_import", "B_price", "B_page", "B_photo"
            }
        ));
        tbModel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbModelMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbModel);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 120, 780, -1));

        btnDelete.setBackground(new java.awt.Color(255, 51, 51));
        btnDelete.setFont(new java.awt.Font("Phetsarath OT", 1, 12)); // NOI18N
        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/Delete5.gif"))); // NOI18N
        btnDelete.setText("ລົບ");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        jPanel1.add(btnDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 540, 80, 50));

        btnSave.setBackground(new java.awt.Color(51, 255, 0));
        btnSave.setFont(new java.awt.Font("Phetsarath OT", 1, 12)); // NOI18N
        btnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/Add5.gif"))); // NOI18N
        btnSave.setText("ເພີ່ມ");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        jPanel1.add(btnSave, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 540, 100, 50));

        btnEdit.setBackground(new java.awt.Color(0, 255, 153));
        btnEdit.setFont(new java.awt.Font("Phetsarath OT", 1, 12)); // NOI18N
        btnEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/Edit5.gif"))); // NOI18N
        btnEdit.setText("ແກ້ໄຂ");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });
        jPanel1.add(btnEdit, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 540, 100, 50));

        jLabel20.setFont(new java.awt.Font("Phetsarath OT", 1, 18)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(255, 255, 255));
        jLabel20.setText("ຈຳນວນໜ້າ");
        jPanel1.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 500, 90, 29));

        pagebookBox.setFont(new java.awt.Font("Phetsarath OT", 0, 11)); // NOI18N
        pagebookBox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                pagebookBoxKeyTyped(evt);
            }
        });
        jPanel1.add(pagebookBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 500, 188, 29));

        jLabel3.setFont(new java.awt.Font("Phetsarath OT", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("ລະຫັດ ປື້ມ");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 140, 105, 29));

        labelPhoto.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
        jPanel1.add(labelPhoto, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 10, 110, 120));

        btnChoose.setBackground(new java.awt.Color(255, 204, 204));
        btnChoose.setFont(new java.awt.Font("Phetsarath OT", 1, 12)); // NOI18N
        btnChoose.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/browsButton.png"))); // NOI18N
        btnChoose.setText("ເລືອກ");
        btnChoose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChooseActionPerformed(evt);
            }
        });
        jPanel1.add(btnChoose, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 50, 110, 40));

        jButton1.setBackground(new java.awt.Color(102, 102, 255));
        jButton1.setFont(new java.awt.Font("Phetsarath OT", 1, 12)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/clearButton.png"))); // NOI18N
        jButton1.setText("ລ້າງ");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 540, 90, 50));

        jLabel4.setIcon(new javax.swing.ImageIcon("C:\\Users\\Bie\\Desktop\\book.png")); // NOI18N
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1360, 640));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 100, -1, 640));

        jPanel2.setBackground(new java.awt.Color(102, 0, 255));
        jPanel2.setPreferredSize(new java.awt.Dimension(1400, 100));
        jPanel2.setLayout(null);

        jLabel1.setFont(new java.awt.Font("Phetsarath OT", 3, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("ຈັດການຂໍ້ມູນປື້ມ");
        jPanel2.add(jLabel1);
        jLabel1.setBounds(577, 5, 360, 90);

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 100));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void namebookBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_namebookBoxActionPerformed
    
    }//GEN-LAST:event_namebookBoxActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
     try {
         Connection c = MyConnection.getConnection();
            String sql="DELETE FROM `tb_book` WHERE `b_id`=?";
            
        PreparedStatement  ps = c.prepareStatement(sql);
 
             ps.setString(1, idbookBox.getText());
         
       if(ps.executeUpdate()!=-1){
                    JOptionPane.showMessageDialog(null, "complete","save",JOptionPane.INFORMATION_MESSAGE);
                    
                      
                }
            
       showData();
        
            idbookBox.setText("");
            namebookBox.setText("");
          generatebookBox.setDate(new Date());
           importbookBox.setDate(new Date());
        amountbookBox.setText("");  
//   authornameBox.setText("");

  //     typebookBox.setText("");
     finebookBox.setText("");
     pricebookBox.setText("");
     pagebookBox.setText("");
        labelPhoto.setIcon(new ImageIcon());
          
          
        } catch (Exception e) {
            e.printStackTrace();
        }
     
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
    try {
      Connection  c=MyConnection.getConnection();
      
       //Set Combobox Author ID/////////////////////////////////////////////////////////////////////////////////////////////////////         
             String authorID="";
            String select = "select au_id from tb_author where au_name =?";
            ps = c.prepareStatement(select);
            ps.setString(1, authornameBox.getSelectedItem().toString());
            ResultSet rs = ps.executeQuery();
            while(rs.next())
                    {
                        authorID = rs.getString("au_id");
                    }
      ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            
  //Set Combobox Type ID ////////////////////////////////////////////////////////////////          
              String typeID="";
              String selecttype="select t_id from tb_booktype where t_name=?";
          PreparedStatement pst = c.prepareStatement(selecttype);
              pst.setString(1, typebookBox.getSelectedItem().toString());
             ResultSet rst = pst.executeQuery();
            while(rst.next())
                    {
                        typeID = rst.getString("t_id");
                    }
  
    

            String sql="UPDATE `tb_book` SET `b_name`=?,`b_amount`=?,`author_name`=?,`b_type`=?,`b_fine`=?,`date_generate`=?,`date_import`=?,`b_price`=?,`b_page`=?,`b_photo`=? WHERE b_id=?";
               String gender="";
               SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
           
            String generatedate = sdf.format(generatebookBox.getDate());
            String importdate = sdf.format(importbookBox.getDate());
            
    //         LocalDate today = LocalDate.now();
     //       LocalDate birthdate = LocalDate.parse(bdate);
     //          int age= Period.between(birthdate,today).getYears();             
      //         int phone = Integer.valueOf(phonenumberbox.getText());
          
PreparedStatement ps = c.prepareStatement(sql);

 
             ps.setString(11, idbookBox.getText());
            ps.setString(1, namebookBox.getText());
            ps.setString(2, amountbookBox.getText());
            ps.setString(3, authorID);
            ps.setString(4, typeID);
            ps.setString(5, finebookBox.getText());
            ps.setString(6, sdf.format(generatebookBox.getDate()));
             ps.setString(7, sdf.format(importbookBox.getDate()));
            ps.setString(8, pricebookBox.getText());
            ps.setString(9,pagebookBox.getText());
 // ImageIcon icon= (ImageIcon) labelPhoto.getIcon();
            ps.setBytes(10, photo);
 
          

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

            if(ps.executeUpdate()!=-1){
                    JOptionPane.showMessageDialog(null, "complete","save",JOptionPane.INFORMATION_MESSAGE);
                }
         
            showData();
     
            idbookBox.setText("");
                 namebookBox.setText("");
          generatebookBox.setDate(new Date());
           importbookBox.setDate(new Date());
        amountbookBox.setText("");  
  // authornameBox.setText("");
  //     typebookBox.setText("");
     finebookBox.setText("");
     pricebookBox.setText("");
     pagebookBox.setText("");
     labelPhoto.setIcon(new ImageIcon());
          
        } catch (Exception e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_btnEditActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
     String bid = idbookBox.getText();
     String bname = namebookBox.getText();
     String bamount = amountbookBox.getText();
    String authername = authornameBox.getSelectedItem().toString();

     String btype = (String) typebookBox.getSelectedItem();
     String bfine=finebookBox.getText();
     Date bgenerate = generatebookBox.getDate();
     Date bimport = importbookBox.getDate();
     String bprice = pricebookBox.getText();
     String page = pagebookBox.getText();
     
     

     c=MyConnection.getConnection();
         try {
        
    //Set Combobox Author ID/////////////////////////////////////////////////////////////////////////////////////////////////////         
             String authorID="";
            String select = "select au_id from tb_author where au_name =?";
            ps = c.prepareStatement(select);
            ps.setString(1, authornameBox.getSelectedItem().toString());
            ResultSet rs = ps.executeQuery();
            while(rs.next())
                    {
                        authorID = rs.getString("au_id");
                    }
      ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            
  //Set Combobox Type ID ////////////////////////////////////////////////////////////////          
              String typeID="";
              String selecttype="select t_id from tb_booktype where t_name=?";
          PreparedStatement pst = c.prepareStatement(selecttype);
              pst.setString(1, typebookBox.getSelectedItem().toString());
             ResultSet rst = pst.executeQuery();
            while(rst.next())
                    {
                        typeID = rst.getString("t_id");
                    }
  //////////////////////////////////////////////////////////////////////////////////////////////////////////          
             
             
             String sql ="insert into tb_book  (`b_id`, `b_name`, `b_amount`, `author_name`, `b_type`, `b_fine`, `date_generate`, `date_import`, `b_price`,`b_page`,`b_photo`) VALUES(?,?,?,?,?,?,?,?,?,?,?)";
            ps=c.prepareStatement(sql);
            
            ps.setString(1, bid);
            ps.setString(2,bname);
            ps.setString(3, bamount);
            ps.setString(4, authorID);
            ps.setString(5,typeID);
            ps.setString(6,bfine);
            
             SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            ps.setString(7, sdf.format(bgenerate));
            ps.setString(8,sdf.format(bimport));
            ps.setString(9,bprice);
            ps.setString(10, page);
            ps.setBytes(11, photo);
            
            if(ps.executeUpdate()!=-1){
                    JOptionPane.showMessageDialog(null, "complete","save",JOptionPane.INFORMATION_MESSAGE);
                }
          
            showData();
            
         generatebookBox.setDate(new Date());
      importbookBox.setDate(new Date()); 
             idbookBox.setText("");
              namebookBox.setText("");
           //    authornameBox.setText("");
           amountbookBox.setText("");
      //      typebookBox.setText("");
            finebookBox.setText("");
              pricebookBox.setText("");
               pagebookBox.setText("");
               
      labelPhoto.setIcon(new ImageIcon());
        } catch (SQLException ex) {
            Logger.getLogger(BookForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    
    
     private void showData() {
      int row = tbModel.getRowCount()-1;
      while(row>=0)
      {
          model.removeRow(row--);
      }
        try {
               String select  =  "SELECT * FROM `tb_book`";
      ResultSet rs = MyConnection.getConnection().createStatement().executeQuery(select);
      while(rs.next())
      {
         String []  arr = {String.valueOf(rs.getInt("b_id")),String.valueOf(rs.getString("b_name")),
         String.valueOf(rs.getInt("b_amount")),String.valueOf(rs.getInt("author_name")),
                        String.valueOf(rs.getInt("b_type")),
                         String.valueOf(rs.getInt("b_fine")),String.valueOf(rs.getDate("date_generate")),
                         String.valueOf(rs.getDate("date_import")),String.valueOf(rs.getInt("b_price")),
                         String.valueOf(rs.getInt("b_page")),String.valueOf(rs.getBlob("b_photo"))};
         model.addRow(arr);
      }
      
        } catch (Exception e) {
            e.printStackTrace();
        }
   
      
    }
    
    
    
    
    
    private void pricebookBoxKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pricebookBoxKeyTyped
         if(!Character.isDigit(evt.getKeyChar())){
            evt.consume();

        }
    }//GEN-LAST:event_pricebookBoxKeyTyped

    private void amountbookBoxKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_amountbookBoxKeyTyped
        if(!Character.isDigit(evt.getKeyChar())){
            evt.consume();

        }
    }//GEN-LAST:event_amountbookBoxKeyTyped

    private void finebookBoxKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_finebookBoxKeyTyped
   if(!Character.isDigit(evt.getKeyChar())){
            evt.consume();

        }        // TODO add your handling code here:
    }//GEN-LAST:event_finebookBoxKeyTyped

    private void pagebookBoxKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pagebookBoxKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_pagebookBoxKeyTyped

    
    public ImageIcon ResizeImage(String ImagePath, byte[] pic)
    {
        ImageIcon MyImage = null;
        if(ImagePath != null)
        {
           MyImage = new ImageIcon(ImagePath);
        }else
        {
            MyImage = new ImageIcon(pic);
        }
        Image img = MyImage.getImage();
        Image newImg = img.getScaledInstance(labelPhoto.getWidth(), labelPhoto.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon image = new ImageIcon(newImg);
        return image;
    }
    
    
    
    private void tbModelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbModelMouseClicked
        try {
            int index = tbModel.getSelectedRow();
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            idbookBox.setText(tbModel.getValueAt(index, 0).toString());
            namebookBox.setText((String) tbModel.getValueAt(index, 1));
            amountbookBox.setText(tbModel.getValueAt(index, 2).toString());
 
  
            finebookBox.setText(tbModel.getValueAt(index, 5).toString());
            generatebookBox.setDate(sdf.parse(tbModel.getValueAt(index, 6).toString()));
            importbookBox.setDate(sdf.parse(tbModel.getValueAt(index, 7).toString()));
            pricebookBox.setText(tbModel.getValueAt(index, 8).toString());
            pagebookBox.setText(tbModel.getValueAt(index,9).toString());
   

    
        } catch (Exception e) {
            e.printStackTrace();
        }
          
//Show Type ComboBox///////////////////////////////////////////////////////////////////////////////////////
  try{
            int index = tbModel.getSelectedRow();
         String select = "select t_name from tb_booktype where t_id=?";
            PreparedStatement ps = MyConnection.getConnection().prepareStatement(select);
            ps.setString(1,tbModel.getValueAt(index, 4).toString());
            ResultSet rs = ps.executeQuery();
            while(rs.next())
            {
                         authornameBox.setSelectedItem(rs.getString("t_name"));
            }
        }catch(Exception e){
            e.printStackTrace();
        }


 //Show Author ComboBox//////////////////////////////////////////////////////////////////////////////////       
        
        try{
            int index = tbModel.getSelectedRow();
         String select = "select au_name from tb_author where au_id=?";
            PreparedStatement ps = MyConnection.getConnection().prepareStatement(select);
            ps.setString(1,tbModel.getValueAt(index, 3).toString());
            ResultSet rs = ps.executeQuery();
            while(rs.next())
            {
                         authornameBox.setSelectedItem(rs.getString("au_name"));
            }
        }catch(Exception e){
            e.printStackTrace();
        }
                   
        
        
        
  //Show Photo//////////////////////////////////////////////////////////////////////////////////////////////////////      
         try{
            int index = tbModel.getSelectedRow();
         String select = "select b_photo from tb_book where b_id=?";
            PreparedStatement ps = MyConnection.getConnection().prepareStatement(select);
            ps.setString(1,tbModel.getValueAt(index, 0).toString());
            ResultSet rs = ps.executeQuery();
            while(rs.next())
            {
                labelPhoto.setIcon(ResizeImage(null, rs.getBytes("b_photo")));
                photo = rs.getBytes("b_photo");
            }
        }catch(Exception e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_tbModelMouseClicked

    private void btnChooseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChooseActionPerformed
  JFileChooser chooser = new JFileChooser();
        chooser.showOpenDialog(null);
        File f = chooser.getSelectedFile();
        filename = f.getAbsolutePath();
        ImageIcon imageicon = new ImageIcon(new ImageIcon(filename).getImage().getScaledInstance(labelPhoto.getWidth(), labelPhoto.getHeight(), Image.SCALE_SMOOTH));
        labelPhoto.setIcon(imageicon);

        try {
            File image = new File(filename);
            FileInputStream fis = new FileInputStream(image);
            ByteArrayOutputStream bos = new ByteArrayOutputStream();
            byte[ ]buf = new byte[1024];
            for(int readNum;(readNum=fis.read(buf))!=-1;){
                bos.write(buf,0,readNum);
            }
            photo=bos.toByteArray();

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnChooseActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    generatebookBox.setDate(new Date());
      importbookBox.setDate(new Date()); 
             idbookBox.setText("");
              namebookBox.setText("");
            //   authornameBox.setText("");
           amountbookBox.setText("");
        //    typebookBox.setText("");
            finebookBox.setText("");
              pricebookBox.setText("");
               pagebookBox.setText("");
      labelPhoto.setIcon(new ImageIcon());
      searchBox.setText("");
    }//GEN-LAST:event_jButton1ActionPerformed

    private void authornameBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_authornameBoxActionPerformed

        
    }//GEN-LAST:event_authornameBoxActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
      String selct;
       int rowCount = tbModel.getRowCount()-1;
        while(rowCount>=0)
        {
            model.removeRow(rowCount--);
        }
      PreparedStatement ps ;
        try {
            if(searchBox.getText().equals(""))
            {
                 selct = "select * from tb_book ";
                  ps  = MyConnection.getConnection().prepareStatement(selct);
               
             
            }
            else
            {
                 selct = "select * from tb_book where  b_name = ?";
                   ps = MyConnection.getConnection().prepareStatement(selct);
                    ps.setString(1, searchBox.getText());
              
      
            } 
            
            
      
             ResultSet rs= ps.executeQuery();
                 while (rs.next())
             {
                 String []  arr = {String.valueOf(rs.getInt("b_id")),String.valueOf(rs.getString("b_name")),
         String.valueOf(rs.getInt("b_amount")),String.valueOf(rs.getInt("author_name")),
                        String.valueOf(rs.getInt("b_type")),
                         String.valueOf(rs.getInt("b_fine")),String.valueOf(rs.getDate("date_generate")),
                         String.valueOf(rs.getDate("date_import")),String.valueOf(rs.getInt("b_price")),
                         String.valueOf(rs.getInt("b_page")),String.valueOf(rs.getBlob("b_photo"))};
                 model.addRow(arr);
             }
        } catch (Exception e) {
            e.printStackTrace();
        }
    
    }//GEN-LAST:event_jButton2ActionPerformed

    private void searchBoxKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchBoxKeyReleased
/*    String selct;
       int rowCount = tbModel.getRowCount()-1;
        while(rowCount>=0)
        {
            model.removeRow(rowCount--);
        }
      PreparedStatement ps ;
        try {
            if(searchBox.getText().equals(""))
            {
                 selct = "select * from tb_book ";
                  ps  = MyConnection.getConnection().prepareStatement(selct);
               
             
            }
            else
            {
                 selct = "select * from tb_book where  b_name = ?";
                   ps = MyConnection.getConnection().prepareStatement(selct);
                    ps.setString(1, searchBox.getText());
              
      
            } 
            
            
      
             ResultSet rs= ps.executeQuery();
             while(rs.next())
             {
                 String []  arr = {String.valueOf(rs.getInt("b_id")),String.valueOf(rs.getString("b_name")),
         String.valueOf(rs.getInt("b_amount")),String.valueOf(rs.getInt("author_name")),
                        String.valueOf(rs.getInt("b_type")),
                         String.valueOf(rs.getInt("b_fine")),String.valueOf(rs.getDate("date_generate")),
                         String.valueOf(rs.getDate("date_import")),String.valueOf(rs.getInt("b_price")),
                         String.valueOf(rs.getInt("b_page")),String.valueOf(rs.getBlob("b_photo"))};
                 model.addRow(arr);
             }
        } catch (Exception e) {
            e.printStackTrace();
        }
    */
    }//GEN-LAST:event_searchBoxKeyReleased

    private void searchBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchBoxActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        new Home().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BookForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BookForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BookForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BookForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BookForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField amountbookBox;
    private javax.swing.JComboBox<String> authornameBox;
    private javax.swing.JButton btnChoose;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnSave;
    private javax.swing.JTextField finebookBox;
    private com.toedter.calendar.JDateChooser generatebookBox;
    private javax.swing.JTextField idbookBox;
    private com.toedter.calendar.JDateChooser importbookBox;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelPhoto;
    private javax.swing.JTextField namebookBox;
    private javax.swing.JTextField pagebookBox;
    private javax.swing.JTextField pricebookBox;
    private javax.swing.JTextField searchBox;
    private javax.swing.JTable tbModel;
    private javax.swing.JComboBox<String> typebookBox;
    // End of variables declaration//GEN-END:variables
}
